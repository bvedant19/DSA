// { Driver Code Starts
//Initial template for C++

#include <bits/stdc++.h> 
using namespace std;

 // } Driver Code Ends
//User function template for C++

// binArray is an array that consists only 0s and 1s
// return sorted binary array 
class Solution{
    public:
    vector<int> SortBinaryArray(vector<int> binArray)
    {
        // Your code goes here ((
        int n = binArray.size();
    	int count0 = 0, count1 = 0;
         
        for(int i = 0; i < n; i++)
        {
            // count the number of 0s
            if(binArray[i] == 0)
              count0++;
              
            // count the number of 1s
            if(binArray[i] == 1)
               count1++;
        }
        
        // Put the first count0 elements in result as 0 
        for(int i = 0; i < count0; i++)
            binArray[i] = 0;
        
        // Put the last count1 elements in result as 1
        for(int i = 0; i < count1; i++)
            binArray[count0 + i] = 1;
    
       	return binArray;
    }
};

// { Driver Code Starts.
int main() {
	int t;
	cin>>t;
	
	while(t--)
	{
	    int n;
	    cin>>n;
	    vector<int> binArray(n);
	    
	    for(int i = 0; i  < n; i++)
	      cin>>binArray[i];
	    Solution ob;  
	  	vector<int> result = ob.SortBinaryArray(binArray);
	  	for(int i=0; i<n; i++)
	  	    cout<<result[i]<<" ";
	      
	    cout<<endl;
	}
	return 0;
}
  // } Driver Code Ends
